name: "Test"
on:
  pull_request:
  push:
  # Run periodically, to build with latest -unstable releases. Caching makes
  # this a cheap operation when nothing changed, so no need for further logic.
  schedule:
    - cron: '*/6 * * * *'
jobs:
  tests:
    strategy:
      matrix:
        config:
          - os: ubuntu-latest
            channel: nixpkgs-unstable
          - os: ubuntu-latest
            channel: nixpkgs-22.11
          - os: macos-latest
            channel: nixpkgs-unstable
          - os: macos-latest
            channel: nixpkgs-22.11-darwin
    runs-on: ${{ matrix.config.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v20
      with:
        nix_path: nixpkgs=channel:${{ matrix.config.channel }}
    - uses: cachix/cachix-action@v12
      with:
        name: cl-nix-lite
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - if: runner.os == 'macOS'
      name: Install GNU sed
      # BSD sed has a weird interpretation of -e 0,/.../
      run: "nix-env -f '<nixpkgs>' -iA gnused"
    # Only bother actually building derivations that are not yet in the
    # store. This prevents nix-build from downloading all built binaries from
    # the store only to discard them immediately afterwards.
    - name: All examples
      run: |
        cd examples && \
          nix-build --no-out-link --dry-run 2>&1 | \
          sed -e '0,/will be built:$/d' -e '/^[^ ]/,$d' | \
          xargs -r nix-build --no-out-link
    # TODO: Move to the main top-level CI nix build.
    - run: cd examples/flake-app && nix build --no-link --override-input cl-nix-lite ../../
      name: examples/flake-app
